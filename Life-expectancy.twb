<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='mac' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Life-expectancy' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='life-expectancy-at-age-10' inline='true' name='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='life-expectancy' name='textscan.0yjsm3i0o4y8n71aa0ina1b5xp1u'>
            <connection class='textscan' directory='/Users/test/Downloads/Dashboard-Project-Important' filename='life-expectancy-with-world-events.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Countries' name='excel-direct.1odsdq91d70n750zq41e600t7tdw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/test/Downloads/Dashboard-Project-Important/Countries.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='life-expectancy-vs-healthcare-expenditure' name='textscan.1u5ol7b0zrkv8m1bm2dt61t349g7'>
            <connection class='textscan' directory='/Users/test/Downloads/Dashboard-Project-Important' filename='life-expectancy-vs-healthcare-expenditure.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='Health-parameters' name='textscan.0tzzb4k04mxj711gvph2u13wnhvr'>
            <connection class='textscan' directory='/Users/test/Downloads/Dashboard-Project-Important' filename='Health-parameters.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[Country]' />
              <expression op='[Health-parameters.csv].[Country]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[life-expectancy.csv].[Country code]' />
                  <expression op='[life-expectancy-vs-healthcare-expenditure.csv].[Country code]' />
                </expression>
                <expression op='='>
                  <expression op='[life-expectancy.csv].[Year]' />
                  <expression op='[life-expectancy-vs-healthcare-expenditure.csv].[Year]' />
                </expression>
              </expression>
            </clause>
            <relation join='right' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[life-expectancy.csv].[Entity]' />
                  <expression op='[Sheet1].[Country]' />
                </expression>
              </clause>
              <relation connection='textscan.0yjsm3i0o4y8n71aa0ina1b5xp1u' name='life-expectancy.csv' table='[life-expectancy#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Country code' ordinal='2' />
                  <column datatype='real' name='Life Expectancy at Birth (both genders)' ordinal='3' />
                </columns>
              </relation>
              <relation connection='excel-direct.1odsdq91d70n750zq41e600t7tdw' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B195:no:A1:B195:0' header='yes' outcome='6'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1u5ol7b0zrkv8m1bm2dt61t349g7' name='life-expectancy-vs-healthcare-expenditure.csv' table='[life-expectancy-vs-healthcare-expenditure#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='Entity' ordinal='0' />
                <column datatype='integer' name='Year' ordinal='1' />
                <column datatype='string' name='Country code' ordinal='2' />
                <column datatype='real' name='Health Expenditure per capita (WDI)' ordinal='3' />
                <column datatype='real' name='Life Expectancy (at birth) World Bank data' ordinal='4' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0tzzb4k04mxj711gvph2u13wnhvr' name='Health-parameters.csv' table='[Health-parameters#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='string' name='Parameter' ordinal='1' />
              <column datatype='real' name='Points' ordinal='2' />
              <column datatype='integer' name='Rank' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Continent]' value='[Sheet1].[Continent]' />
          <map key='[Country (Health-parameters.csv)]' value='[Health-parameters.csv].[Country]' />
          <map key='[Country code (life-expectancy-vs-healthcare-expenditure.csv)]' value='[life-expectancy-vs-healthcare-expenditure.csv].[Country code]' />
          <map key='[Country code]' value='[life-expectancy.csv].[Country code]' />
          <map key='[Country]' value='[Sheet1].[Country]' />
          <map key='[Entity (life-expectancy-vs-healthcare-expenditure.csv)]' value='[life-expectancy-vs-healthcare-expenditure.csv].[Entity]' />
          <map key='[Entity]' value='[life-expectancy.csv].[Entity]' />
          <map key='[Health Expenditure per capita (WDI)]' value='[life-expectancy-vs-healthcare-expenditure.csv].[Health Expenditure per capita (WDI)]' />
          <map key='[Life Expectancy (at birth) World Bank data]' value='[life-expectancy-vs-healthcare-expenditure.csv].[Life Expectancy (at birth) World Bank data]' />
          <map key='[Life Expectancy at Birth (both genders)]' value='[life-expectancy.csv].[Life Expectancy at Birth (both genders)]' />
          <map key='[Parameter]' value='[Health-parameters.csv].[Parameter]' />
          <map key='[Points]' value='[Health-parameters.csv].[Points]' />
          <map key='[Rank]' value='[Health-parameters.csv].[Rank]' />
          <map key='[Year (life-expectancy-vs-healthcare-expenditure.csv)]' value='[life-expectancy-vs-healthcare-expenditure.csv].[Year]' />
          <map key='[Year]' value='[life-expectancy.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy at Birth (both genders)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy at Birth (both genders)]</local-name>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias>Life Expectancy at Birth (both genders)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[life-expectancy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B195:no:A1:B195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity (life-expectancy-vs-healthcare-expenditure.csv)]</local-name>
            <parent-name>[life-expectancy-vs-healthcare-expenditure.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (life-expectancy-vs-healthcare-expenditure.csv)]</local-name>
            <parent-name>[life-expectancy-vs-healthcare-expenditure.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country code (life-expectancy-vs-healthcare-expenditure.csv)]</local-name>
            <parent-name>[life-expectancy-vs-healthcare-expenditure.csv]</parent-name>
            <remote-alias>Country code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Expenditure per capita (WDI)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Expenditure per capita (WDI)]</local-name>
            <parent-name>[life-expectancy-vs-healthcare-expenditure.csv]</parent-name>
            <remote-alias>Health Expenditure per capita (WDI)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy (at birth) World Bank data</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy (at birth) World Bank data]</local-name>
            <parent-name>[life-expectancy-vs-healthcare-expenditure.csv]</parent-name>
            <remote-alias>Life Expectancy (at birth) World Bank data</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[life-expectancy-vs-healthcare-expenditure.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Health-parameters.csv)]</local-name>
            <parent-name>[Health-parameters.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Parameter]</local-name>
            <parent-name>[Health-parameters.csv]</parent-name>
            <remote-alias>Parameter</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Points]</local-name>
            <parent-name>[Health-parameters.csv]</parent-name>
            <remote-alias>Points</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Health-parameters.csv]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Health-parameters.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Dollar value of life' datatype='real' name='[Calculation_2530178573036101632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Health Expenditure per capita (WDI)] / [Life Expectancy (at birth) World Bank data]' />
      </column>
      <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country (Health-parameters.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country code (life-expectancy-vs-healthcare-expenditure.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country code (life-expectancy-with-world-events.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Congo&quot;' value='&quot;Congo (Brazzaville)&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Entity (life-expectancy-vs-healthcare-expenditure.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Entity (life-expectancy-with-world-events.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='real' name='[Life Expectancy at Birth (both genders)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Life-Threatening-events]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='20' />
      </column>
      <column datatype='integer' name='[Year (life-expectancy-vs-healthcare-expenditure.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_2530178573036101632]' derivation='Attribute' name='[attr:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Entity]' derivation='Attribute' name='[attr:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2530178573036101632]' derivation='Avg' name='[avg:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy at Birth (both genders)]' derivation='Avg' name='[avg:Life Expectancy at Birth (both genders):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2530178573036101632]' derivation='Avg' forecast-column-base='[avg:Calculation_2530178573036101632:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2530178573036101632]' derivation='Sum' forecast-column-base='[sum:Calculation_2530178573036101632:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[All-Continents]' derivation='InOut' name='[io:All-Continents:nk]' pivot='key' type='nominal' />
      <column-instance column='[G8 nations]' derivation='InOut' name='[io:G8 nations:nk]' pivot='key' type='nominal' />
      <column-instance column='[Least polluted countries]' derivation='InOut' name='[io:Least polluted countries:nk]' pivot='key' type='nominal' />
      <column-instance column='[Life Expectancy at Birth (both genders)]' derivation='Median' name='[med:Life Expectancy at Birth (both genders):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2530178573036101632]' derivation='None' name='[none:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Entity (life-expectancy-vs-healthcare-expenditure.csv)]' derivation='None' name='[none:Entity (life-expectancy-vs-healthcare-expenditure.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Entity (life-expectancy-with-world-events.csv)]' derivation='None' name='[none:Entity (life-expectancy-with-world-events.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Life Expectancy at Birth (both genders)]' derivation='None' name='[none:Life Expectancy at Birth (both genders):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life-Threatening-events]' derivation='None' name='[none:Life-Threatening-events:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2530178573036101632]' derivation='Sum' name='[sum:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy at Birth (both genders)]' derivation='Sum' name='[sum:Life Expectancy at Birth (both genders):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Continent,Year (bin))' hidden='true' name='[Action (Continent,Year (bin))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Continent]' />
          <groupfilter function='level-members' level='[Year (bin)]' />
        </groupfilter>
      </group>
      <group name='[All-Continents]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;Africa&quot;' function='range' level='[Continent]' to='&quot;South America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group hidden='true' name='[Exclusions (Entity (life-expectancy-with-world-events.csv),Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Entity (life-expectancy-with-world-events.csv):nk]' />
          <groupfilter function='level-members' level='[none:Year:qk]' />
        </groupfilter>
      </group>
      <group caption='G7 nations' name='[G8 nations]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Japan&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <group name='[Least polluted countries]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Bhutan&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Brunei&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Japan&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Liberia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Luxembourg&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Malaysia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;New Zealand&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Norway&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Portugal&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Spain&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Sweden&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;United States&quot;' />
        </groupfilter>
      </group>
      <group name='[Life-Threatening-Events]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='%null%' function='range' level='[none:Life-Threatening-events:nk]' to='%null%' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Most Polluted countries]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Bahrain&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Bulgaria&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Egypt&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Ghana&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Iran&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Jordan&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Mauritius&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Mongolia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Nepal&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Peru&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Qatar&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Senegal&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Serbia&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;Turkey&quot;' />
          <groupfilter function='member' level='[Entity (life-expectancy-with-world-events.csv)]' member='&quot;United Arab Emirates&quot;' />
        </groupfilter>
      </group>
      <group caption='Years for comparison' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Year:ok]' member='1960' />
          <groupfilter function='member' level='[none:Year:ok]' member='2009' />
        </groupfilter>
      </group>
      <group name='[Top Alcohol Consumers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ecuador&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Moldova&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;South Korea&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Uganda&quot;' />
          <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United Kingdom&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/test/Documents/My Tableau Repository/Datasources/life-expectancy.tde' schema='Extract' tablename='Extract' update-time=''>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_2530178573036101632]' value='[Extract].[Calculation_2530178573036101632]' />
            <map key='[Continent]' value='[Extract].[Continent]' />
            <map key='[Country (Health-parameters.csv)]' value='[Extract].[Country]' />
            <map key='[Country code (life-expectancy-vs-healthcare-expenditure.csv)]' value='[Extract].[Country code]' />
            <map key='[Country code (life-expectancy-with-world-events.csv)]' value='[Extract].[Country code1]' />
            <map key='[Country code]' value='[Extract].[Country code2]' />
            <map key='[Country]' value='[Extract].[Country1]' />
            <map key='[Entity (life-expectancy-vs-healthcare-expenditure.csv)]' value='[Extract].[Entity]' />
            <map key='[Entity (life-expectancy-with-world-events.csv)]' value='[Extract].[Entity1]' />
            <map key='[Entity]' value='[Extract].[Entity2]' />
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[Health Expenditure per capita (WDI)]' value='[Extract].[Health Expenditure per capita (WDI)]' />
            <map key='[Life Expectancy (at birth) World Bank data]' value='[Extract].[Life Expectancy (at birth) World Bank data]' />
            <map key='[Life Expectancy at Birth (both genders) (life-expectancy-with-world-events.csv)]' value='[Extract].[Life Expectancy at Birth (both genders)]' />
            <map key='[Life Expectancy at Birth (both genders)]' value='[Extract].[Life Expectancy at Birth (both genders)1]' />
            <map key='[Life-Threatening-events]' value='[Extract].[Life-Threatening-events]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Parameter]' value='[Extract].[Parameter]' />
            <map key='[Points]' value='[Extract].[Points]' />
            <map key='[Rank]' value='[Extract].[Rank]' />
            <map key='[Year (bin)]' value='[Extract].[Year (bin)]' />
            <map key='[Year (life-expectancy-vs-healthcare-expenditure.csv)]' value='[Extract].[Year]' />
            <map key='[Year (life-expectancy-with-world-events.csv)]' value='[Extract].[Year1]' />
            <map key='[Year]' value='[Extract].[Year2]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_2530178573036101632]' formula='[Health Expenditure per capita (WDI)] / [Life Expectancy (at birth) World Bank data]' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Year (bin)]' formula='SYS_NUMBIN([Year],20)' />
          </calculations>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_2530178573036101632</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_2530178573036101632]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2530178573036101632</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3407</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.10920593642256504</statistic>
                <statistic aggregation='Max' datatype='real'>116.00277005817185</statistic>
                <statistic aggregation='Count' datatype='integer'>220081</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Continent</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;South America&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (Health-parameters.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Health-parameters.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Japan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>173970</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code (life-expectancy-vs-healthcare-expenditure.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code</remote-alias>
              <ordinal>3</ordinal>
              <family>life-expectancy-vs-healthcare-expenditure.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>211</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ABW&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>713489</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code (life-expectancy-with-world-events.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code1</remote-alias>
              <ordinal>4</ordinal>
              <family>life-expectancy-with-world-events.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>176</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AFG&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country code2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country code2</remote-alias>
              <ordinal>5</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>176</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AFG&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country1</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>176</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (life-expectancy-vs-healthcare-expenditure.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>7</ordinal>
              <family>life-expectancy-vs-healthcare-expenditure.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>715222</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity (life-expectancy-with-world-events.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity1</remote-alias>
              <ordinal>8</ordinal>
              <family>life-expectancy-with-world-events.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>176</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entity2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity2</remote-alias>
              <ordinal>9</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>176</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>10</ordinal>
              <family>life-expectancy-with-world-events.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12545</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>14176</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health Expenditure per capita (WDI)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Health Expenditure per capita (WDI)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health Expenditure per capita (WDI)</remote-alias>
              <ordinal>11</ordinal>
              <family>life-expectancy-vs-healthcare-expenditure.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3544</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.0853511100000004</statistic>
                <statistic aggregation='Max' datatype='real'>9145.8281509999997</statistic>
                <statistic aggregation='Count' datatype='integer'>220808</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy (at birth) World Bank data</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy (at birth) World Bank data]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy (at birth) World Bank data</remote-alias>
              <ordinal>12</ordinal>
              <family>life-expectancy-vs-healthcare-expenditure.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12084</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>19.504926829999999</statistic>
                <statistic aggregation='Max' datatype='real'>83.831707320000007</statistic>
                <statistic aggregation='Count' datatype='integer'>714495</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy at Birth (both genders)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy at Birth (both genders) (life-expectancy-with-world-events.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy at Birth (both genders)</remote-alias>
              <ordinal>13</ordinal>
              <family>life-expectancy-with-world-events.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4120</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>14.491</statistic>
                <statistic aggregation='Max' datatype='real'>83.090000000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy at Birth (both genders)1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy at Birth (both genders)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy at Birth (both genders)1</remote-alias>
              <ordinal>14</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4120</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>14.491</statistic>
                <statistic aggregation='Max' datatype='real'>83.090000000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life-Threatening-events</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Life-Threatening-events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life-Threatening-events</remote-alias>
              <ordinal>15</ordinal>
              <family>life-expectancy-with-world-events.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Hiroshima Nagasaki Atomic Bombing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;The nightmare of Tuberculosis&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>284304</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>16</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>1222906</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Parameter</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Parameter]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Parameter</remote-alias>
              <ordinal>17</ordinal>
              <family>Health-parameters.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accuracy and completeness in filling reports&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Speed of delivering examinations and reports&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>173970</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Points</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Points]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Points</remote-alias>
              <ordinal>18</ordinal>
              <family>Health-parameters.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>45.810000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>95.0</statistic>
                <statistic aggregation='Count' datatype='integer'>173970</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>19</ordinal>
              <family>Health-parameters.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>41</statistic>
                <statistic aggregation='Count' datatype='integer'>173970</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Year (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year (bin)</remote-alias>
              <ordinal>20</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>100</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year (life-expectancy-vs-healthcare-expenditure.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>21</ordinal>
              <family>life-expectancy-vs-healthcare-expenditure.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1960</statistic>
                <statistic aggregation='Max' datatype='integer'>2013</statistic>
                <statistic aggregation='Count' datatype='integer'>715222</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year (life-expectancy-with-world-events.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>22</ordinal>
              <family>life-expectancy-with-world-events.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1543</statistic>
                <statistic aggregation='Max' datatype='integer'>2012</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year2</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year2</remote-alias>
              <ordinal>23</ordinal>
              <family>life-expectancy.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>2012</statistic>
                <statistic aggregation='Count' datatype='integer'>1219218</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.579685' group-percentage='0.273205' measure-ordering='alphabetic' measure-percentage='0.14711' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Year (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>100</bucket>
            </map>
            <map to='#42709e'>
              <bucket>99</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>98</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>97</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>96</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>95</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Life Expectancy at Birth (both genders):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[med:Life Expectancy at Birth (both genders):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Life Expectancy at Birth (both genders):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[sum:Life Expectancy at Birth (both genders):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[attr:Calculation_2530178573036101632:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:avg:Calculation_2530178573036101632:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:sum:Calculation_2530178573036101632:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Calculation_2530178573036101632:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-vs-healthcare-expenditure.csv):nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[sum:Value:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R�union&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OWID_KOS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OWID_GDR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OWID_GFR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Least polluted countries:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Entity (life-expectancy-vs-healthcare-expenditure.csv):nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Mali&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Angola&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Laos&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Togo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Libya&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Benin&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Congo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Niger&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Entity (life-expectancy-vs-healthcare-expenditure.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa (all income levels)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia (all income levels)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub-Saharan Africa (all income levels)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle East &amp; North Africa (developing only)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latin America &amp; Caribbean (all income levels)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income: nonOECD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia (developing only)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;High income: OECD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Asia &amp; Pacific (all income levels)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latin America &amp; Caribbean (developing only)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sub-Saharan Africa (developing only)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cura�ao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific (developing only)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:G8 nations:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:All-Continents:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;R�union&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OWID_KOS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OWID_GDR&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OWID_GFR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Entity (life-expectancy-with-world-events.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Continent-analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='life-expectancy-at-age-10' name='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' />
          </datasources>
          <datasource-dependencies datasource='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='real' name='[Life Expectancy at Birth (both genders)]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Year (bin)' datatype='integer' name='[Year (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Year]' peg='0' size='20' />
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Life Expectancy at Birth (both genders)]' derivation='Avg' name='[avg:Life Expectancy at Birth (both genders):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (bin)]' derivation='None' name='[none:Year (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]'>
            <groupfilter function='level-members' level='[Continent]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Continent:nk]'>
            <groupfilter function='level-members' level='[none:Continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='natural' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Continent:nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year:qk]' included-values='in-range'>
            <min>1952</min>
            <max>2012</max>
          </filter>
          <slices>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year:qk]</column>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]</column>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Life Expectancy at Birth (both genders):qk]' scope='cols' value='Average Life Expectancy in years (both genders)' />
            <format attr='subtitle' class='0' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Life Expectancy at Birth (both genders):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Life Expectancy at Birth (both genders):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]' value='Select Continent' />
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (bin):ok] / [federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Continent:nk])</rows>
        <cols>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Life Expectancy at Birth (both genders):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Country-life-expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Japan life expectancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='life-expectancy-at-age-10' name='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' />
          </datasources>
          <datasource-dependencies datasource='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m'>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[Life Expectancy at Birth (both genders)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life Expectancy at Birth (both genders)]' derivation='None' name='[none:Life Expectancy at Birth (both genders):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]'>
            <groupfilter function='member' level='[Continent]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Set 1]'>
            <groupfilter function='member' level='[none:Year:ok]' member='1960' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]</column>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#f9a655' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Set 1]' value='Select Year' />
            <format attr='background-color' value='#e7f1f5' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Life Expectancy at Birth (both genders):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Average Life expectancy in world' label-type='custom' probability='95' scope='per-pane' value-column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Life Expectancy at Birth (both genders):qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:  </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Life Expectancy : </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Life Expectancy at Birth (both genders):qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5966851711273193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Life Expectancy at Birth (both genders):qk]</rows>
        <cols>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Health-Parameters'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Health Parameter comparison out of 100</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='life-expectancy-at-age-10' name='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' />
          </datasources>
          <datasource-dependencies datasource='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m'>
            <column datatype='string' name='[Country (Health-parameters.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='string' name='[Parameter]' role='dimension' type='nominal' />
            <column datatype='real' name='[Points]' role='measure' type='quantitative' />
            <column-instance column='[Points]' derivation='Avg' name='[avg:Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Health-parameters.csv)]' derivation='None' name='[none:Country (Health-parameters.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Parameter]' derivation='None' name='[none:Parameter:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Parameter:nk]' value='276' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Points:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Points:qk]' />
              <text column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Points:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country :                             </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Country (Health-parameters.csv):nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Parameter:                        </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Parameter:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Points out of 100:          </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Points:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Parameter:nk]</rows>
        <cols>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Country (Health-parameters.csv):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life-and-health'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;</run>
            <run fontalignment='1'>Sheet Name</run>
            <run fontalignment='1'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='life-expectancy-at-age-10' name='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' />
          </datasources>
          <datasource-dependencies datasource='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m'>
            <column caption='Dollar value of life' datatype='real' name='[Calculation_2530178573036101632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Health Expenditure per capita (WDI)] / [Life Expectancy (at birth) World Bank data]' />
            </column>
            <column datatype='string' name='[Entity (life-expectancy-with-world-events.csv)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Health Expenditure per capita (WDI)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy (at birth) World Bank data]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year (life-expectancy-vs-healthcare-expenditure.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2530178573036101632]' derivation='Avg' name='[avg:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2530178573036101632]' derivation='Avg' forecast-column-base='[avg:Calculation_2530178573036101632:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Calculation_2530178573036101632:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Expenditure per capita (WDI)]' derivation='Sum' forecast-column-base='[sum:Health Expenditure per capita (WDI):qk]' forecast-column-type='forecast-value' name='[fVal:sum:Health Expenditure per capita (WDI):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (at birth) World Bank data]' derivation='Sum' forecast-column-base='[sum:Life Expectancy (at birth) World Bank data:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Life Expectancy (at birth) World Bank data:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entity (life-expectancy-with-world-events.csv)]' derivation='None' name='[none:Entity (life-expectancy-with-world-events.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (life-expectancy-vs-healthcare-expenditure.csv)]' derivation='None' name='[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Expenditure per capita (WDI)]' derivation='Sum' name='[sum:Health Expenditure per capita (WDI):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy (at birth) World Bank data]' derivation='Sum' name='[sum:Life Expectancy (at birth) World Bank data:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[G8 nations]'>
            <groupfilter function='level-members' level='[Entity (life-expectancy-with-world-events.csv)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-with-world-events.csv):nk]'>
            <groupfilter function='level-members' level='[none:Entity (life-expectancy-with-world-events.csv):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[G8 nations]</column>
            <column>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-with-world-events.csv):nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]' scope='cols' value='Year' />
            <format attr='subtitle' class='0' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e7f1f5' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-with-world-events.csv):nk]' />
              <lod column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:sum:Life Expectancy (at birth) World Bank data:qk]' />
              <lod column='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:sum:Health Expenditure per capita (WDI):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country: </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-with-world-events.csv):nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Year : </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]&gt;</run>
                <run>&#10;Life expectancy : </run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:sum:Life Expectancy (at birth) World Bank data:qk]&gt;</run>
                <run>&#10;Health care investment per person per year $ : &lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:sum:Health Expenditure per capita (WDI):qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Dollar value of life:&#9;</run>
                <run bold='true'>&lt;[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:avg:Calculation_2530178573036101632:qk]&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[fVal:avg:Calculation_2530178573036101632:qk]</rows>
        <cols>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]</cols>
        <tooltip-style tooltip-mode='sticky' />
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style>
        <style-rule element='dash-text'>
          <format attr='border-style' id='dash-text_33' value='solid' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='border-style' value='solid' />
        </style-rule>
      </style>
      <size maxheight='1300' maxwidth='1000' minheight='1300' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='life-expectancy-at-age-10' name='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' />
      </datasources>
      <datasource-dependencies datasource='federated.0y91m7k0b1c3wt1fb7m2u0q3av6m' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='86846' id='18' param='horz' type='layout-flow' w='100000' x='0' y='13154'>
            <zone fixed-size='763' h='86846' id='16' is-fixed='true' type='layout-basic' w='100000' x='0' y='13154'>
              <zone h='82243' id='10' param='horz' type='layout-flow' w='100000' x='0' y='17757'>
                <zone h='82243' id='6' param='horz' type='layout-flow' w='100000' x='0' y='17757'>
                  <zone h='82243' id='1' param='vert' type='layout-flow' w='100000' x='0' y='17757'>
                    <zone fixed-size='505' h='38846' id='23' is-fixed='true' type='layout-basic' w='100000' x='0' y='17757'>
                      <zone h='38846' id='3' param='horz' type='layout-flow' w='52610' x='0' y='17757'>
                        <zone fixed-size='541' h='38846' id='12' is-fixed='true' name='Continent-analysis' w='52610' x='0' y='17757'>
                          <layout-cache fixed-size-h='599' minwidth='282' type-h='fixed' type-w='scalable' />
                        </zone>
                      </zone>
                      <zone h='38846' id='24' param='horz' type='layout-flow' w='47390' x='52610' y='17757'>
                        <zone h='38846' id='8' name='Country-life-expectancy' w='47390' x='52610' y='17757'>
                          <layout-cache cell-count-w='40' minheight='305' non-cell-size-w='60' type-h='scalable' type-w='cell' />
                        </zone>
                      </zone>
                    </zone>
                    <zone h='43397' id='30' type='layout-basic' w='100000' x='0' y='56603'>
                      <zone h='43397' id='25' param='vert' type='layout-flow' w='52600' x='0' y='56603'>
                        <zone h='43089' id='26' name='Life-and-health' w='52600' x='0' y='56603'>
                          <layout-cache minheight='200' minwidth='161' type-h='scalable' type-w='scalable' />
                        </zone>
                      </zone>
                      <zone h='43397' id='31' param='horz' type='layout-flow' w='47400' x='52600' y='56603'>
                        <zone h='43397' id='29' name='Health-Parameters' w='47400' x='52600' y='56603'>
                          <layout-cache cell-count-w='2' non-cell-size-w='277' type-h='cell' type-w='cell' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='4603' id='15' param='vert' type='layout-flow' w='52610' x='0' y='13154'>
                <zone h='4001' id='19' mode='checkdropdown' name='Continent-analysis' param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]' type='filter' values='relevant' w='52610' x='0' y='13154' />
              </zone>
              <zone h='4603' id='20' mode='dropdown' name='Country-life-expectancy' param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Set 1]' type='filter' w='47390' x='52610' y='13154' />
            </zone>
          </zone>
          <zone h='13154' id='32' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone forceUpdate='true' h='13154' id='33' type='text' w='99600' x='0' y='0'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='28'>Rise of the Dragons !!</run>
                <run fontcolor='#0000ff' fontsize='10'>&#10;This visualization takes you through a journey of Human life expectancy of different countries over 50 years. The 4 visualizations are explained below&#10;1] Continent-Analysis shows how Asia&apos;s life expectancy has increased over the years&#10;2] Japan has risen from the ashes as a phoenix which can be seen in the second visualization. Use the Year filter to see its improvement in life expectancy&#10;3] Dollar value of life is the ratio of life expectancy in a year to per capita health care expenses. US has the highest ratio in the world and can be seen as an outlier. Hover over each circle and you will be surprised&#10;4] Japanese health care system is considered as the best in the world. Compare it with US and you will know why</run>
              </formatted-text>
            </zone>
          </zone>
        </zone>
        <zone fixed-size='61' h='5000' id='27' is-fixed='true' mode='checkdropdown' name='Life-and-health' param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[G8 nations]' type='filter' w='16000' x='7600' y='60385' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Continent-analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[avg:Life Expectancy at Birth (both genders):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Regions]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Country:nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (bin):ok]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Country-life-expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Set 1]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[All-Continents]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[Set 1]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Life-and-health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[G8 nations]' type='filter' />
            <card pane-specification-id='1' param='[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-with-world-events.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[G8 nations]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[io:G8 nations:nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-vs-healthcare-expenditure.csv):nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity (life-expectancy-with-world-events.csv):nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Health Expenditure per capita (WDI):qk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Life Expectancy (at birth) World Bank data:qk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year (life-expectancy-vs-healthcare-expenditure.csv):qk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Year:qk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[sum:Health Expenditure per capita (WDI):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Health-Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Country (Health-parameters.csv):nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Entity:nk]</field>
            <field>[federated.0y91m7k0b1c3wt1fb7m2u0q3av6m].[none:Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Continent-analysis' />
        <viewpoint name='Country-life-expectancy'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Health-Parameters'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Life-and-health'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Continent-analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country-life-expectancy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Health-Parameters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOydd3xVRfqHn3Nub+m9JyQBQu8dBBFBQUVWxa5r17W7u+7PdVd3V7e5RXft
      FRUUFUSQIr33kgQSQnovN/0mt99zzu+PRIogGmVx3Zzn8+EPzp3MvDNnvnPmzHnfGUFRFAUV
      lV6K+EMboKLyQ6IKQKVXowpApVejCkClV6MKQKVXowpApVejCkClV6MKQKVXowpApVejCkCl
      V6MKQKVXowpApVejCkClV6MKQKVXowpApVejCkClV6MKQKVXowpApVejCkClV6MKQKVXowpA
      pVejCkClV6MKQKVXowpApVejCkClV6MKQKVXowpApVejCkClV6MKQKVXowpApVejCkClV6MK
      QKVXowpApVejCkClV6MKQKVXowpApVejCkClV6MKQKVXowpApVejCkClV6P9uh88Hg9FRUXn
      0xYVlfPO1wpAEARCQ0OJj48/n/aoqJxXvlYAXyIIwvmwQ0XlB0F9B1Dp1XxnAciyREAKICvK
      ubTnvw8lQHuLnfqmNvzS+a+r19FIeZUd6UfQzorkx+P2IH/L9LIs0VJfSWFJOa2dHrweN56A
      jCwFaG2oxt7SieRzUltVg8PjR1Fk/F43Pl/gnNn83QTga2Pb5+/z8wcfZ82hEvzyf//N+c5I
      LvZsWs6Ha3fT6pHOe/FNR5byzz+toEM6c7dSJB9NVYUUltk5/9adSnPBEv7ywr+p83279DXZ
      y3n8iSf517ufkl+YzRsv/pmFe8vwu9vYtfRlPvu8AHfbMd576x/k1DXj72xi85t/4ONlOXzL
      Ir6Rb3wHOBOu5lpydu7l2K6jBPoWMSErlWCj5hyZ9F+GqOBpa6LVaSbwA4zCAWczJbVG+Lqi
      JTfF+7awp24Q990XdV5t+yrmqOHMmJZF8LccVusOrcETMotf3zudUKOERZmNOSkaFCeOpnrq
      fV4USaSyopUhHgmNIZjMyVeSYkv5bh33DPQ8HyVAbWkxjYRy08MXs3zDAeydkwnSG2mqOMwH
      b7/Kur3HCOozk9/+4WfE+OpY+u5LLNt4CEPCRB7+1W3YF/+LhgkPcsfkGArWL2VVmZ5rfjKF
      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
      6rR09v8BixBk3YMqld0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Life-and-health' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
